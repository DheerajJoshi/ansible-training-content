---
header:
  author: CC, PI, JLK
  title: Chapter 4, Using Ansible for Orchestrated Commands
  description: Ansible Operational Course

slides:

  - set_global:
      transition: rotate
      background: '#007777'

  -
    - nested:
       -
         - h1: Ansible Orchestrated Commands
         - h3: A Review of Ansible Plays and Playbooks
         - class_notes: Students will walk through the process Ansible goes through to execute the desired jobs on targeted hosts when a Playbook gets run.

       -
         - h2: Plays
         - p: An ordered series of tasks executed on a selection of hosts
         - p: With controls over how the tasks operate
         - code: |
             - name: This is a Play
               hosts: web-servers
               remote_user: fred
               sudo: yes
               connection: ssh
               gather_facts: no
               vars:
                 http_port: 80
                 cache_dir: /opt/cache

               tasks:
                 - name: create cache dir
                   file: path={{ cache_dir }} state=directory

                 - name: install nginx
                   yum: name=nginx state=installed
         - class_notes: |
             Discuss play controls such as sudo, remote_user, etc.
             Discuss variables. Show the list of tasks and how
             all finish one before going on to the next. Mention serial
             as a way to control how hosts flow through the tasks.
             Multiple plays can be written into a playbook.

       -
         - h2: Playbooks
         - p: ansible-playbook is the tool used to select
         - ul:
           - an ordered set of plays
           - an inventory
           - global variables
           - forks
           - inventory limits

       -
         - h2: Playbooks
         - h3: Execution
         - code: |
            $ ansible-playbook play.yaml -i pre-prod -e "cache_dir=/srv/cache/" -f 30 -l dfw

       -
         - h2: Handlers
         - h3: "Actions triggered upon change"
